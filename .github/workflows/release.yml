name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  format:
    name: Format
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
        toolchain: [stable]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Run format
        run: cargo fmt --all -- --check

  test:
    name: Test
    needs: [format]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: macos-latest
            target: aarch64-apple-darwin
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
        toolchain: [stable]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Run checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.platform.target }}
          components: rustfmt, clippy

      - name: Run test
        run: cargo test --target "${{ matrix.platform.target }}" --all-features

  create-release:
    name: Upload artifact
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - id: create-release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          generate_release_notes: true
          make_latest: false

  publish-crates:
    name: Publish crate
    needs: [create-release]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
        toolchain: [stable]
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Publish lindera-tantivy
        run: |
          LINDERA_TANTIVY_VERSION=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[] | select(.name=="lindera-tantivy") | .version')
          LINDERA_TANTIVY_VERSIONS=$(curl -s -XGET https://crates.io/api/v1/crates/lindera-tantivy | jq -r 'select(.versions != null) | .versions[].num')
          if echo ${LINDERA_TANTIVY_VERSIONS} | grep ${LINDERA_TANTIVY_VERSION} >/dev/null; then
            echo "lindera-tantivy ${LINDERA_TANTIVY_VERSION} has already published"
          else
            cargo publish
          fi
          sleep 20
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
